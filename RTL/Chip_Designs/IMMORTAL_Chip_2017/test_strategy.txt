testing strategy:


RTL tests:

	* 1st round (using traffic generators):		
		.-------------------------------------------------------------------------------------------------------------------.
		| 1	| reconfigure the routers in the beginning (this will increase the coverage for LBDRs and NI)		|	Done	|	
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 2	| Read NI FLAG register																				|	Done	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 3	| Read NI counter register																			|	Done	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 4	| Read self diagnosis info 																			|	Done	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 5	| Send diagnosis packets to SHMU																	|	Done	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 6	| send packets to all other nodes 																	|	Done	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 7	| inject faults in FIFO input and LBDR input to take them into packet drop mode 					|	Done	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 8	| test all the states of counter threshold 															|	Done 	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 9	| test all the arbiter in cases																		|  Pending	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 10| test all the arbiter out cases																	|  Pending	|
		'-------------------------------------------------------------------------------------------------------------------'


	* 2nd round (using plasma's behavioral memory content from file):
		.-------------------------------------------------------------------------------------------------------------------.
		| 11| try firing all the checkers in one router via iJTAG fault injection								|	Done	|	
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 12| sending packets to all other nodes, without waiting for specific packets to receive				|	Done	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 13| test GPIO																							|	Done	|
		|-------------------------------------------------------------------------------------------------------|-----------|
		| 14| run plasma test program and use UART																|	Done	|
		'-------------------------------------------------------------------------------------------------------------------'


	* 3rd round:
		* pre-load verilog memory from file and send packets in the network (the rest should already work!). log via UART!

	* 4th round:
		* try writing simple application (sending packets to other nodes) into verilog-memory via iJTAG. log via UART!
	
Post-synthesis tests:
	* write into Plasma Memory via iJTAG
		* test UART (if it works, try getting out the other test results from UART)
			* for this we need a UART reciever for the testbench! maybe re-use the plasma UART
		* test NoC packet sending (sent and recieved packets should be recorded via UART), not many packets are required, 
		  each node should be able to send to all others
		* test GPIO

Post-layout tests:
	* re-do Post-synthesis tests!

